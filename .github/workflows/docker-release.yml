name: Release Assets

on:
  workflow_dispatch:
  # Workflow runs when a release is created in GitHub
  release:
    types: [published]

env:
  DOCKER_USER: bencuk
  IMAGE_NAME: kubeview

permissions:
  packages: write
  contents: write

jobs:
  release:
    name: Release image & chart
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/${{ github.actor }}/${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }}
          labels: ${{ steps.meta.outputs.labels }}
          file: ./build/Dockerfile
          build-args: |
            version="${{ github.event.release.tag_name }}"
            buildInfo="GitHub release build dated:$(date -I)"

      # Package chart as tgz file
      - name: Package Helm chart
        run: helm package kubeview
        working-directory: ./charts

      # Update the index
      - name: Update chart index
        run: helm repo index .
        working-directory: ./charts

      # Push updated index and packaged tgz back into git repo
      - name: Update repo with output
        uses: mikeal/publish-to-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Also attach the packaged tgz to the release in GitHub
      - name: Upload Helm chart to release
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./charts/kubeview-${{ github.event.release.tag_name }}.tgz
          asset_name: kubeview-${{ github.event.release.tag_name }}.tgz
          asset_content_type: application/octet-stream
